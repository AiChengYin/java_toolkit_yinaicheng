<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>top.yinaicheng</groupId>
    <artifactId>java_toolkit_yinaicheng</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <oroject.reporting.outputEncoding>UTF-8</oroject.reporting.outputEncoding>

        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <springBootStarter.version>2.7.18</springBootStarter.version>
        <springWeb.version>5.1.20.RELEASE</springWeb.version>
        <lombok.version>1.18.30</lombok.version>
        <validation.version>2.0.1.Final</validation.version>
        <guava.version>32.1.3-jre</guava.version>
        <gson.version>2.10.1</gson.version>
        <hibernateValidator.version>6.0.23.Final</hibernateValidator.version>
        <hutool.version>5.8.23</hutool.version>
        <mysql.version>8.0.33</mysql.version>
        <mybatisPlus.version>3.5.4.1</mybatisPlus.version>
        <pageHelper.version>1.4.6</pageHelper.version>

    </properties>

    <!--父模块-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.18</version>
        <relativePath/>
    </parent>

    <dependencies>

        <!-- Spring Starter使用Logback进行日志记录，默认日志记录开始 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>${springBootStarter.version}</version>
        </dependency>

        <!-- 使用Spring MVC构建web（包括RESTful）应用程序的初学者。使用Tomcat作为默认的嵌入式容器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springBootStarter.version}</version>
        </dependency>

        <!-- 用于springboot的json读写入门 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
            <version>${springBootStarter.version}</version>
        </dependency>

        <!-- 使用Hibernate Validator进行Java Bean验证 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${springBootStarter.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springWeb.version}</version>
        </dependency>

        <!-- MySQL连接器/J是JDBC Type 4驱动程序，这意味着它是MySQL协议的纯Java实现，不依赖于MySQL客户端库 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!-- 一个增强的Mybatis工具包，以简化开发 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatisPlus.version}</version>
        </dependency>

        <!-- mybatis提供的分页插件 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pageHelper.version}</version>
        </dependency>

        <!-- Lombok依赖，使用lombok需要idea先安装lombok插件 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- 一个验证模型，它可以通过在字段、方法或类上放置注释来向Bean添加约束 -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation.version}</version>
        </dependency>

        <!-- Hibernate的Jakarta Bean Validation参考实现 -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernateValidator.version}</version>
        </dependency>


        <!-- Guava是一套核心和扩展库，包括实用程序类、谷歌收藏、I/O类等等 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Gson是一个Java库，可用于将Java对象转换为其JSON表示。它还可以用于将JSON字符串转换为等效的Java对象 -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Hutool是一个小而全的Java工具类库，通过静态方法封装，降低相关API的学习成本，提高工作效率，使Java拥有函数式语言般的优雅 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>